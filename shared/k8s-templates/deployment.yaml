apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{DEPLOYMENT_NAME}}
  namespace: {{NAMESPACE}}
  labels:
    app: {{DEPLOYMENT_NAME}}
    version: {{VERSION}}
    managed-by: cloudeefly
    mcp-server: "true"
  annotations:
    cloudeefly.io/deployment-id: "{{DEPLOYMENT_ID}}"
    cloudeefly.io/github-repo: "{{GITHUB_REPO}}"
    cloudeefly.io/created-at: "{{CREATED_AT}}"
spec:
  replicas: {{REPLICAS}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{DEPLOYMENT_NAME}}
  template:
    metadata:
      labels:
        app: {{DEPLOYMENT_NAME}}
        version: {{VERSION}}
        mcp-server: "true"
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: mcp-server
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: mcp-server
        image: {{IMAGE}}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: MCP_TRANSPORT
          value: "sse"
        - name: MCP_PORT
          value: "8000"
        - name: MCP_HOST
          value: "0.0.0.0"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # Additional environment variables will be added here
        {{ENV_VARS}}
        resources:
          requests:
            cpu: {{CPU_REQUEST}}
            memory: {{MEMORY_REQUEST}}
          limits:
            cpu: {{CPU_LIMIT}}
            memory: {{MEMORY_LIMIT}}
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      imagePullSecrets:
      - name: harbor-registry
      # Affinity for better pod distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{DEPLOYMENT_NAME}}
              topologyKey: kubernetes.io/hostname
      # Tolerations for node taints (if needed)
      tolerations: []
